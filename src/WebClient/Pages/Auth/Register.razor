@page "/register"
@using WebClient.Services
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Register - RenewXControl</PageTitle>

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow-sm mt-5">
                <div class="card-body p-4">
                    <div class="text-center mb-4">
                        <i class="bi bi-person-plus-fill text-primary" style="font-size: 2rem;"></i>
                        <h2 class="h4 mt-2">Create New Account</h2>
                    </div>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mb-3 text-center">@errorMessage</div>
                    }

                    @if (isLoading)
                    {
                        <div class="text-center mb-3">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2">Creating account...</p>
                        </div>
                    }

                    <EditForm Model="@model" OnValidSubmit="@RegisterUser">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger mb-3" />

                        <div class="mb-3">
                            <label class="form-label">Username</label>
                            <InputText @bind-Value="model.UserName" class="form-control" placeholder="Enter username" />
                            <ValidationMessage For="@(() => model.UserName)" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="model.Email" class="form-control" placeholder="Enter email" />
                            <ValidationMessage For="@(() => model.Email)" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Password</label>
                            <InputText @bind-Value="model.Password" type="password" class="form-control" placeholder="Enter password" />
                            <ValidationMessage For="@(() => model.Password)" class="text-danger" />
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Confirm Password</label>
                            <InputText @bind-Value="model.ConfirmPassword" type="password" class="form-control" placeholder="Confirm password" />
                            <ValidationMessage For="@(() => model.ConfirmPassword)" class="text-danger" />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                }
                                Register
                            </button>
                        </div>
                    </EditForm>

                    <div class="text-center mt-3">
                        <p class="small text-muted">
                            Already have an account? <NavLink href="/login" class="text-primary">Sign In</NavLink>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

